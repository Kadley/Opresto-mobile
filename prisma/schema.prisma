// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id         String       @id @default(cuid())
  name       String
  postalCode String       @map("postal_code")
  geopos     String
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  restaurants Restaurant[]

  @@map("city")
}

model CookingStyle {
  id        String   @id @default(cuid())
  label     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  restaurants Restaurant[] @relation(name: "RestaurantCookingStyle")

  @@map("cooking_style")
}

model Manager {
  id         String       @id @default(cuid())
  firstname  String
  lastname   String
  email      String       @unique
  phone      String
  password   String
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  restaurants Restaurant[]

  @@map("manager")
}

model Restaurant {
  id          String   @id @default(cuid())
  name        String
  description String
  address     String
  terrace     Boolean  @default(false)
  cityId      String   @map("city_id")
  managerId   String   @map("manager_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  city          City           @relation(fields: [cityId], references: [id])
  manager       Manager        @relation(fields: [managerId], references: [id])
  rating        Rating[]
  cookingStyles CookingStyle[] @relation(name: "RestaurantCookingStyle")

  @@unique([name, cityId])
  @@map("restaurant")
}

model Rating {
  id           String @id @default(cuid())
  restaurantId String @map("restaurant_id")
  value        Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])

  @@map("rating")
}
